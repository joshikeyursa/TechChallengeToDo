Parameters:
  Environment:
    Type: String
    Default: Development
    AllowedValues:
      - Development
      - Production
      - Local
      - Integration
      - Test

Mappings:
  InstanceTypeMap:
    Production:
      "InstanceType": "m4.large"
    Development:
      "InstanceType": "t3.micro"

  ImageByRegionMap:
    ap-southeast-1:
      "HVM64": "ami-073998ba87e205747"
    ap-southeast-2:
      "HVM64": "ami-05c029a4b57edda9e"
    us-east-1:
      "HVM64": "ami-0ff8a91507f77f867"
    us-west-1:
      "HVM64": "ami-0bdb828fd58c52235"
    eu-west-1:
      "HVM64": "ami-047bb4163c506cd98"
    ap-northeast-1:
      "HVM64": "ami-06cd52961ce9f0d85"

Resources:

  TaskTrackerTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: TaskTrackerTG
      TargetType: instance
      VpcId: !ImportValue TaskTrackerVPC
      Protocol: HTTP
      Port: 8080 #This needs to be changed once n/w mode is changed
      Tags:
        - Key: Environment
          Value: !Ref 'Environment'

  TaskTrackerEC2ASGLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: TaskTrackerAppLT
      LaunchTemplateData:
        ImageId: !FindInMap [ImageByRegionMap,!Ref "AWS::Region",HVM64]
        InstanceType: !FindInMap [InstanceTypeMap,!Ref 'Environment',InstanceType]

  TaskTrackerEC2ASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: TaskTrackerEC2ASG
      LaunchTemplate:
        LaunchTemplateId: !Ref TaskTrackerEC2ASGLT
        Version: !GetAtt TaskTrackerEC2ASGLT.LatestVersionNumber
      AvailabilityZones:
        - !ImportValue TaskTrackerAZ1
        - !ImportValue TaskTrackerAZ2
      MinSize: 0
      MaxSize: 0