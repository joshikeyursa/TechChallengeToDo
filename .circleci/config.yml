# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test-be:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Then run your tests!
      - setup_remote_docker:
          version: 19.03.13
      - aws-cli/setup:
          profile-name: default
      - run:
          name: Test
          command: mvn test
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: BuildAndDockerize
          command: |
            mvn clean test package
            aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 105712406831.dkr.ecr.ap-southeast-2.amazonaws.com
            docker build -t kjoshi/tasktracker-app .
            docker tag kjoshi/tasktracker-app:$CIRCLE_BUILD_NUM $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/kjoshi/tasktracker-app:latest
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/kjoshi/tasktracker-app:latest
  build-and-deploy-fe:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - aws-cli/setup:
          profile-name: default
      - run:
          name: CreateBucketToHostWebSite
          command: aws cloudformation deploy --stack-name host-website --template-file infra/public-website.yaml

  create-one-time-infra:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - aws-cli/setup:
          profile-name: default
      - run:
          name: CreateNetworkComponents
          command: aws cloudformation deploy --stack-name tasktracker-ecs-infra --template-file infra/onetime-ecs-infra.yaml
      - run:
          name: CreateNetworkComponents
          command: aws cloudformation deploy --stack-name tasktracker-network-infra --template-file infra/onetime-network-infra.yaml
      - run:
          name: CreateRolesAndInstanceProfiles
          command: aws cloudformation deploy --capabilities CAPABILITY_NAMED_IAM --stack-name tasktracker-roles-infra --template-file infra/onetime-role-infra.yaml
      - run:
          name: CreateComputeComponents
          command: aws cloudformation deploy --stack-name tasktracker-compute-infra --template-file infra/onetime-compute-infra.yaml

# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  buildapp: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      #- build-and-test-be
      #- build-and-deploy-fe
      - create-one-time-infra
      - build-and-test-be
